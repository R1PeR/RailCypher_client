{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Typography';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.fetchData = function (type, message) {\n      var typeMessage = type + \"Message\";\n      var body = {\n        method: \"POST\",\n        dataType: \"JSON\",\n        body: {\n          typeMessage: message\n        },\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      };\n      fetch(\"http://localhost:8080/api/fence/\" + type, body).then(function (resp) {\n        console.log(resp.json());\n        return resp.json();\n      });\n    };\n\n    _this.state = {\n      input: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"changeHandle\",\n    value: function changeHandle() {\n      this.state.input = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card\",\n        style: {\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Fence Cypher\"), React.createElement(Input, {\n        id: \"text\",\n        value: this.state.input,\n        onChange: this.changeHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.fetchData(\"encode\", \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"ENCODE\"), React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.fetchData(\"decode\", \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"DECODE\")), React.createElement(TextField, {\n        disabled: true,\n        id: \"filled-error\",\n        margin: \"normal\",\n        variant: \"filled\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\project10_client\\src\\App.js"],"names":["React","Component","Fragment","withStyles","Button","Input","InputLabel","TextField","Card","CardContent","Typography","Grid","App","fetchData","type","message","typeMessage","body","method","dataType","headers","fetch","then","resp","console","log","json","state","input","event","target","value","padding","changeHandle","width"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Typography';\n\n\nclass App extends Component {\n  constructor(){\n      super();\n      this.state = {\n        input: \"\"\n      }\n  }\n  changeHandle(){\n    this.state.input = event.target.value\n  }\n  fetchData = (type,message) => {\n    var typeMessage = type+\"Message\";\n    var body = {\n      method: \"POST\",\n      dataType: \"JSON\",\n      body: {\n\t      typeMessage : message\n      },\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      }\n    }\n    fetch(\"http://localhost:8080/api/fence/\"+type,body)\n    .then((resp) => {\n      console.log(resp.json());\n      return resp.json();\n    })\n  }\n  render() {\n    return (\n      <div class=\"App\">\n        <div class=\"App-header\">\n          <Card className=\"card\" style={{padding:20}}>\n            <Typography>Fence Cypher</Typography>\n            <Input id=\"text\" value={this.state.input} onChange={this.changeHandle}></Input>\n            <div>\n              <Button style={{width:100}} variant=\"contained\" color=\"primary\" onClick={this.fetchData(\"encode\",\"\")}>ENCODE</Button>\n              <Button style={{width:100}} variant=\"contained\" color=\"primary\" onClick={this.fetchData(\"decode\",\"\")}>DECODE</Button>\n            </div>\n            <TextField disabled id=\"filled-error\" margin=\"normal\" variant=\"filled\" value=\"\"></TextField>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App ;\n"]},"metadata":{},"sourceType":"module"}