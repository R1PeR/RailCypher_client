{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      input: '',\n      output: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"changeHandle\",\n    value: function changeHandle(event) {\n      this.setState({\n        input: event.target.value\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(type, message) {\n      var typeMessage = type + \"Message\";\n      var options = {\n        credentials: \"include\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        body: JSON.stringify({\n          typeMessage: message\n        })\n      };\n\n      try {\n        var response = fetch(\"http://localhost:8080/api/fence/\" + type, options);\n        var status = response.status;\n      } catch (error) {\n        console.error(\"Error is:\" + error);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card\",\n        style: {\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Fence Cypher\"), React.createElement(Input, {\n        id: \"text\",\n        value: this.state.input,\n        onChange: this.changeHandle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.fetchData(\"encode\", this.state.input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"ENCODE\"), React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.fetchData(\"decode\", this.state.input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"DECODE\")), React.createElement(TextField, {\n        disabled: true,\n        id: \"filled-error\",\n        margin: \"normal\",\n        variant: \"filled\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\project10_client\\src\\App.js"],"names":["React","Component","Button","Input","InputLabel","TextField","Card","Typography","App","props","state","input","output","event","setState","target","value","type","message","typeMessage","options","credentials","method","headers","body","JSON","stringify","response","fetch","status","error","console","padding","changeHandle","bind","width","fetchData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField'\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        input: '',\n        output: ''\n      };\n  }\n  changeHandle(event){\n    this.setState({\n        input: event.target.value\n    });\n  }\n  fetchData(type,message){\n    var typeMessage = type+\"Message\";\n    const options = {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\"Content-Type\": \"text/plain\"},\n      body: JSON.stringify({\n\t      typeMessage : message\n      })\n    }\n    try {\n      const response = fetch(\"http://localhost:8080/api/fence/\"+type, options);\n      const status = response.status;\n    }catch (error){\n      console.error(\"Error is:\" +error);\n    }\n  }\n  render() {\n    return (\n      <div class=\"App\">\n        <div class=\"App-header\">\n          <Card className=\"card\" style={{padding:20}}>\n            <Typography>Fence Cypher</Typography>\n            <Input id=\"text\" value={this.state.input} onChange={this.changeHandle.bind(this)}></Input>\n            <div>\n              <Button style={{width:100}} variant=\"contained\" color=\"primary\" onClick={this.fetchData(\"encode\",this.state.input)}>ENCODE</Button>\n              <Button style={{width:100}} variant=\"contained\" color=\"primary\" onClick={this.fetchData(\"decode\",this.state.input)}>DECODE</Button>\n            </div>\n            <TextField disabled id=\"filled-error\" margin=\"normal\" variant=\"filled\" value=\"\"></TextField>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App ;\n"]},"metadata":{},"sourceType":"module"}