{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\project10_client\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Typography';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      input: '',\n      output: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"changeHandle\",\n    value: function changeHandle(event) {\n      this.setState({\n        input: event.target.value\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(type, message) {\n        var typeMessage, options, request, response, status;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                typeMessage = type + \"Message\";\n                options = {\n                  method: \"POST\",\n                  dataType: \"JSON\",\n                  body: {\n                    typeMessage: message\n                  },\n                  headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\"\n                  }\n                };\n                request = new Request(\"http://localhost:8080/api/fence/\" + type, options);\n                _context.next = 5;\n                return fetch(request);\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return response.status;\n\n              case 8:\n                status = _context.sent;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData(_x, _x2) {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card\",\n        style: {\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Fence Cypher\"), React.createElement(Input, {\n        id: \"text\",\n        value: this.state.input,\n        onChange: this.changeHandle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.fetchData(\"encode\", this.state.input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"ENCODE\"), React.createElement(Button, {\n        style: {\n          width: 100\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.fetchData(\"decode\", this.state.input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"DECODE\")), React.createElement(TextField, {\n        disabled: true,\n        id: \"filled-error\",\n        margin: \"normal\",\n        variant: \"filled\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\project10_client\\src\\App.js"],"names":["React","Component","Fragment","withStyles","Button","Input","InputLabel","TextField","Card","CardContent","Typography","Grid","App","props","state","input","output","event","setState","target","value","type","message","typeMessage","options","method","dataType","body","headers","request","Request","fetch","response","status","padding","changeHandle","bind","width","fetchData"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Typography';\n\n\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        input: '',\n        output: ''\n      };\n  }\n  changeHandle(event){\n    this.setState({\n        input: event.target.value\n    });\n  }\n  async fetchData(type,message){\n    var typeMessage = type+\"Message\";\n    const options = {\n      method: \"POST\",\n      dataType: \"JSON\",\n      body: {\n\t      typeMessage : message\n      },\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      }\n    }\n    const request = new Request(\"http://localhost:8080/api/fence/\"+type, options);\n    const response = await fetch(request);\n    const status = await response.status;\n  }\n  render() {\n    return (\n      <div class=\"App\">\n        <div class=\"App-header\">\n          <Card className=\"card\" style={{padding:20}}>\n            <Typography>Fence Cypher</Typography>\n            <Input id=\"text\" value={this.state.input} onChange={this.changeHandle.bind(this)}></Input>\n            <div>\n              <Button style={{width:100}} variant=\"contained\" color=\"primary\" onClick={this.fetchData(\"encode\",this.state.input)}>ENCODE</Button>\n              <Button style={{width:100}} variant=\"contained\" color=\"primary\" onClick={this.fetchData(\"decode\",this.state.input)}>DECODE</Button>\n            </div>\n            <TextField disabled id=\"filled-error\" margin=\"normal\" variant=\"filled\" value=\"\"></TextField>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App ;\n"]},"metadata":{},"sourceType":"module"}